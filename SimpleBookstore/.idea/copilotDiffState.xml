<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/bookstore/model/Book.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/bookstore/model/Book.java" />
              <option name="originalContent" value="package com.bookstore.model;&#10;&#10;import jakarta.persistence.*;&#10;&#10;@Entity&#10;@Table(name = &quot;books&quot;)&#10;public class Book {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @Column(nullable = false)&#10;    private String title;&#10;&#10;    @Column(nullable = false)&#10;    private String author;&#10;&#10;    @Column(unique = true)&#10;    private String isbn;&#10;&#10;    @Column(nullable = false)&#10;    private Double price;&#10;&#10;    @Column(columnDefinition = &quot;TEXT&quot;)&#10;    private String description;&#10;&#10;    @Column(name = &quot;stock_quantity&quot;)&#10;    private Integer stockQuantity = 0;&#10;&#10;    // Constructors&#10;    public Book() {}&#10;&#10;    public Book(String title, String author, String isbn, Double price, String description, Integer stockQuantity) {&#10;        this.title = title;&#10;        this.author = author;&#10;        this.isbn = isbn;&#10;        this.price = price;&#10;        this.description = description;&#10;        this.stockQuantity = stockQuantity;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;&#10;    public String getAuthor() { return author; }&#10;    public void setAuthor(String author) { this.author = author; }&#10;&#10;    public String getIsbn() { return isbn; }&#10;    public void setIsbn(String isbn) { this.isbn = isbn; }&#10;&#10;    public Double getPrice() { return price; }&#10;    public void setPrice(Double price) { this.price = price; }&#10;&#10;    public String getDescription() { return description; }&#10;    public void setDescription(String description) { this.description = description; }&#10;&#10;    public Integer getStockQuantity() { return stockQuantity; }&#10;    public void setStockQuantity(Integer stockQuantity) { this.stockQuantity = stockQuantity; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.bookstore.model;&#13;&#10;&#13;&#10;import jakarta.persistence.*;&#13;&#10;import jakarta.validation.constraints.NotBlank;&#13;&#10;import jakarta.validation.constraints.NotNull;&#13;&#10;import jakarta.validation.constraints.PositiveOrZero;&#13;&#10;&#13;&#10;@Entity&#13;&#10;@Table(name = &quot;books&quot;)&#13;&#10;public class Book {&#13;&#10;&#13;&#10;    @Id&#13;&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#13;&#10;    private Long id;&#13;&#10;&#13;&#10;    @Column(nullable = false)&#13;&#10;    @NotBlank(message = &quot;Title is required&quot;)&#13;&#10;    private String title;&#13;&#10;&#13;&#10;    @Column(nullable = false)&#13;&#10;    @NotBlank(message = &quot;Author is required&quot;)&#13;&#10;    private String author;&#13;&#10;&#13;&#10;    @Column(unique = true)&#13;&#10;    private String isbn;&#13;&#10;&#13;&#10;    @Column(nullable = false)&#13;&#10;    @NotNull(message = &quot;Price is required&quot;)&#13;&#10;    private Double price;&#13;&#10;&#13;&#10;    @Column(columnDefinition = &quot;TEXT&quot;)&#13;&#10;    private String description;&#13;&#10;&#13;&#10;    @Column(name = &quot;stock_quantity&quot;)&#13;&#10;    @PositiveOrZero(message = &quot;Stock quantity must be zero or positive&quot;)&#13;&#10;    private Integer stockQuantity = 0;&#13;&#10;&#13;&#10;    // Constructors&#13;&#10;    public Book() {}&#13;&#10;&#13;&#10;    public Book(String title, String author, String isbn, Double price, String description, Integer stockQuantity) {&#13;&#10;        this.title = title;&#13;&#10;        this.author = author;&#13;&#10;        this.isbn = isbn;&#13;&#10;        this.price = price;&#13;&#10;        this.description = description;&#13;&#10;        this.stockQuantity = stockQuantity;&#13;&#10;    }&#13;&#10;&#13;&#10;    // Getters and Setters&#13;&#10;    public Long getId() { return id; }&#13;&#10;    public void setId(Long id) { this.id = id; }&#13;&#10;&#13;&#10;    public String getTitle() { return title; }&#13;&#10;    public void setTitle(String title) { this.title = title; }&#13;&#10;&#13;&#10;    public String getAuthor() { return author; }&#13;&#10;    public void setAuthor(String author) { this.author = author; }&#13;&#10;&#13;&#10;    public String getIsbn() { return isbn; }&#13;&#10;    public void setIsbn(String isbn) { this.isbn = isbn; }&#13;&#10;&#13;&#10;    public Double getPrice() { return price; }&#13;&#10;    public void setPrice(Double price) { this.price = price; }&#13;&#10;&#13;&#10;    public String getDescription() { return description; }&#13;&#10;    public void setDescription(String description) { this.description = description; }&#13;&#10;&#13;&#10;    public Integer getStockQuantity() { return stockQuantity; }&#13;&#10;    public void setStockQuantity(Integer stockQuantity) { this.stockQuantity = stockQuantity; }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/bookstore/model/Order.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/bookstore/model/Order.java" />
              <option name="originalContent" value="package com.bookstore.model;&#10;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;import java.util.List;&#10;&#10;@Entity&#10;@Table(name = &quot;orders&quot;)&#10;public class Order {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @Column(name = &quot;customer_name&quot;, nullable = false)&#10;    private String customerName;&#10;&#10;    @Column(name = &quot;customer_email&quot;, nullable = false)&#10;    private String customerEmail;&#10;&#10;    @Column(name = &quot;customer_address&quot;, nullable = false, columnDefinition = &quot;TEXT&quot;)&#10;    private String customerAddress;&#10;&#10;    @Column(name = &quot;order_date&quot;)&#10;    private LocalDateTime orderDate = LocalDateTime.now();&#10;&#10;    @Column(name = &quot;total_amount&quot;, nullable = false)&#10;    private Double totalAmount;&#10;&#10;    @Column(nullable = false)&#10;    private String status = &quot;PENDING&quot;;&#10;&#10;    @OneToMany(mappedBy = &quot;order&quot;, cascade = CascadeType.ALL, fetch = FetchType.LAZY)&#10;    private List&lt;OrderItem&gt; orderItems;&#10;&#10;    // Constructors&#10;    public Order() {}&#10;&#10;    public Order(String customerName, String customerEmail, String customerAddress, Double totalAmount) {&#10;        this.customerName = customerName;&#10;        this.customerEmail = customerEmail;&#10;        this.customerAddress = customerAddress;&#10;        this.totalAmount = totalAmount;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getCustomerName() { return customerName; }&#10;    public void setCustomerName(String customerName) { this.customerName = customerName; }&#10;&#10;    public String getCustomerEmail() { return customerEmail; }&#10;    public void setCustomerEmail(String customerEmail) { this.customerEmail = customerEmail; }&#10;&#10;    public String getCustomerAddress() { return customerAddress; }&#10;    public void setCustomerAddress(String customerAddress) { this.customerAddress = customerAddress; }&#10;&#10;    public LocalDateTime getOrderDate() { return orderDate; }&#10;    public void setOrderDate(LocalDateTime orderDate) { this.orderDate = orderDate; }&#10;&#10;    public Double getTotalAmount() { return totalAmount; }&#10;    public void setTotalAmount(Double totalAmount) { this.totalAmount = totalAmount; }&#10;&#10;    public String getStatus() { return status; }&#10;    public void setStatus(String status) { this.status = status; }&#10;&#10;    public List&lt;OrderItem&gt; getOrderItems() { return orderItems; }&#10;    public void setOrderItems(List&lt;OrderItem&gt; orderItems) { this.orderItems = orderItems; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.bookstore.model;&#13;&#10;&#13;&#10;import jakarta.persistence.*;&#13;&#10;import jakarta.validation.constraints.NotNull;&#13;&#10;import jakarta.validation.constraints.NotBlank;&#13;&#10;import jakarta.validation.constraints.Email;&#13;&#10;import java.time.LocalDateTime;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;@Entity&#13;&#10;@Table(name = &quot;orders&quot;)&#13;&#10;public class Order {&#13;&#10;&#13;&#10;    @Id&#13;&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#13;&#10;    private Long id;&#13;&#10;&#13;&#10;    @Column(name = &quot;customer_name&quot;, nullable = false)&#13;&#10;    @NotBlank(message = &quot;Customer name is required&quot;)&#13;&#10;    private String customerName;&#13;&#10;&#13;&#10;    @Column(name = &quot;customer_email&quot;, nullable = false)&#13;&#10;    @NotBlank(message = &quot;Customer email is required&quot;)&#13;&#10;    @Email(message = &quot;Customer email should be valid&quot;)&#13;&#10;    private String customerEmail;&#13;&#10;&#13;&#10;    @Column(name = &quot;customer_address&quot;, nullable = false, columnDefinition = &quot;TEXT&quot;)&#13;&#10;    @NotBlank(message = &quot;Customer address is required&quot;)&#13;&#10;    private String customerAddress;&#13;&#10;&#13;&#10;    @Column(name = &quot;order_date&quot;)&#13;&#10;    private LocalDateTime orderDate = LocalDateTime.now();&#13;&#10;&#13;&#10;    @Column(name = &quot;total_amount&quot;, nullable = false)&#13;&#10;    @NotNull(message = &quot;Total amount is required&quot;)&#13;&#10;    private Double totalAmount;&#13;&#10;&#13;&#10;    @Column(nullable = false)&#13;&#10;    private String status = &quot;PENDING&quot;;&#13;&#10;&#13;&#10;    @OneToMany(mappedBy = &quot;order&quot;, cascade = CascadeType.ALL, fetch = FetchType.LAZY)&#13;&#10;    private List&lt;OrderItem&gt; orderItems;&#13;&#10;&#13;&#10;    // Constructors&#13;&#10;    public Order() {}&#13;&#10;&#13;&#10;    public Order(String customerName, String customerEmail, String customerAddress, Double totalAmount) {&#13;&#10;        this.customerName = customerName;&#13;&#10;        this.customerEmail = customerEmail;&#13;&#10;        this.customerAddress = customerAddress;&#13;&#10;        this.totalAmount = totalAmount;&#13;&#10;    }&#13;&#10;&#13;&#10;    // Getters and Setters&#13;&#10;    public Long getId() { return id; }&#13;&#10;    public void setId(Long id) { this.id = id; }&#13;&#10;&#13;&#10;    public String getCustomerName() { return customerName; }&#13;&#10;    public void setCustomerName(String customerName) { this.customerName = customerName; }&#13;&#10;&#13;&#10;    public String getCustomerEmail() { return customerEmail; }&#13;&#10;    public void setCustomerEmail(String customerEmail) { this.customerEmail = customerEmail; }&#13;&#10;&#13;&#10;    public String getCustomerAddress() { return customerAddress; }&#13;&#10;    public void setCustomerAddress(String customerAddress) { this.customerAddress = customerAddress; }&#13;&#10;&#13;&#10;    public LocalDateTime getOrderDate() { return orderDate; }&#13;&#10;    public void setOrderDate(LocalDateTime orderDate) { this.orderDate = orderDate; }&#13;&#10;&#13;&#10;    public Double getTotalAmount() { return totalAmount; }&#13;&#10;    public void setTotalAmount(Double totalAmount) { this.totalAmount = totalAmount; }&#13;&#10;&#13;&#10;    public String getStatus() { return status; }&#13;&#10;    public void setStatus(String status) { this.status = status; }&#13;&#10;&#13;&#10;    public List&lt;OrderItem&gt; getOrderItems() { return orderItems; }&#13;&#10;    public void setOrderItems(List&lt;OrderItem&gt; orderItems) { this.orderItems = orderItems; }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>